from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from typing import Dict, List


def start_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(
                    text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –∏ –Ω–∞—á–∞—Ç—å —ç–∫–æ–Ω–æ–º–∏—Ç—å",
                    callback_data="onboarding_add_first"
                )],
                [InlineKeyboardButton(
                    text="üìã –°–Ω–∞—á–∞–ª–∞ –≤—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ",
                    callback_data="show_plans_first"
                )]
            ])
    return kb


def create_smart_menu(
    products_count: int,
    max_links: int,
    plan: str
) -> InlineKeyboardMarkup:
    """–£–º–Ω–æ–µ –º–µ–Ω—é, –∞–¥–∞–ø—Ç–∏—Ä—É—é—â–µ–µ—Å—è –ø–æ–¥ –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""

    buttons = []

    # –ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
    if products_count == 0:
        buttons.append([InlineKeyboardButton(
            text="üéØ –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä",
            callback_data="add_product"
        )])
    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã, –Ω–æ –Ω–µ –ª–∏–º–∏—Ç
    elif products_count < max_links:
        buttons.append([InlineKeyboardButton(
            text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä",
            callback_data="add_product"
        )])
        buttons.append([InlineKeyboardButton(
            text="üì¶ –ú–æ–∏ —Ç–æ–≤–∞—Ä—ã",
            callback_data="list_products"
        )])
    # –ï—Å–ª–∏ –ª–∏–º–∏—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç - –ø—É—à–∏–º –Ω–∞ –∞–ø–≥—Ä–µ–π–¥
    else:
        buttons.append([InlineKeyboardButton(
            text="‚ö†Ô∏è –õ–∏–º–∏—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç - –£–ª—É—á—à–∏—Ç—å —Ç–∞—Ä–∏—Ñ",
            callback_data="upsell_limit_reached"
        )])
        buttons.append([InlineKeyboardButton(
            text="üì¶ –ú–æ–∏ —Ç–æ–≤–∞—Ä—ã",
            callback_data="list_products"
        )])

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    buttons.append([
        InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="my_stats"),
        InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
    ])

    # –î–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ - –Ω–µ–Ω–∞–≤—è–∑—á–∏–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    if plan == "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π" and products_count >= 3:
        buttons.append([InlineKeyboardButton(
            text="üöÄ –•–æ—Ç–∏—Ç–µ –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π?",
            callback_data="show_upgrade_benefits"
        )])

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def show_plans_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏."""
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üíº –°–º–æ—Ç—Ä–µ—Ç—å —Ç–∞—Ä–∏—Ñ –ë–∞–∑–æ–≤—ã–π",
            callback_data="plan_basic"
        )],
        [InlineKeyboardButton(
            text="üöÄ –°–º–æ—Ç—Ä–µ—Ç—å —Ç–∞—Ä–∏—Ñ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π",
            callback_data="plan_pro"
        )],
        [InlineKeyboardButton(
            text="¬´ –ù–∞–∑–∞–¥",
            callback_data="back_to_menu"
        )]
    ])
    return kb


def upsell_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üöÄ –£–ª—É—á—à–∏—Ç—å –¥–æ –ë–∞–∑–æ–≤–æ–≥–æ (199‚ÇΩ/–º–µ—Å)",
            callback_data="plan_basic"
        )],
        [InlineKeyboardButton(
            text="üíé –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ç–∞—Ä–∏—Ñ—ã",
            callback_data="show_plans_first"
        )],
        [InlineKeyboardButton(
            text="üóë –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–π —Ç–æ–≤–∞—Ä",
            callback_data="remove_product"
        )],
        [InlineKeyboardButton(
            text="¬´ –ù–∞–∑–∞–¥",
            callback_data="back_to_menu"
        )]
    ])
    return kb


def onboarding_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(inline_keyboard=[
                        [InlineKeyboardButton(
                            text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –µ—â—ë —Ç–æ–≤–∞—Ä",
                            callback_data="add_product"
                        )],
                        [InlineKeyboardButton(
                            text="üìã –í—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ",
                            callback_data="show_plans_first"
                        )],
                        [InlineKeyboardButton(
                            text="üì¶ –ú–æ–∏ —Ç–æ–≤–∞—Ä—ã",
                            callback_data="list_products"
                        )]
                    ]),
    return kb


def main_inline_kb() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ InlineKeyboard."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä",
                    callback_data="add_product"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üì¶ –ú–æ–∏ —Ç–æ–≤–∞—Ä—ã",
                    callback_data="list_products"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üóë –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä",
                    callback_data="remove_product"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üìã –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö",
                    callback_data="export_menu"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                    callback_data="my_stats"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                    callback_data="settings"
                ),
            ],
        ]
    )
    return kb


def choose_plan_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π (5 —Ç–æ–≤–∞—Ä–æ–≤)",
                    callback_data="plan_free",
                )
            ],
            [
                InlineKeyboardButton(
                    text="üíº –ë–∞–∑–æ–≤—ã–π (50 —Ç–æ–≤–∞—Ä–æ–≤)",
                    callback_data="plan_basic",
                )
            ],
            [
                InlineKeyboardButton(
                    text="üöÄ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π (250 —Ç–æ–≤–∞—Ä–æ–≤)",
                    callback_data="plan_pro",
                )
            ],
        ]
    )
    return kb


def products_inline(products: list[dict]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏."""
    inline_rows = []

    for p in products:
        name = p.get("name", f"–¢–æ–≤–∞—Ä {p['nm_id']}")
        display_name = name[:40] + "..." if len(name) > 40 else name

        inline_rows.append([
            InlineKeyboardButton(
                text=f"üìä {display_name}",
                callback_data=f"product_detail:{p['nm_id']}"
            )
        ])

    # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    inline_rows.append([
        InlineKeyboardButton(
            text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä",
            callback_data="add_product"
        ),
    ])
    inline_rows.append([
        InlineKeyboardButton(
            text="¬´ –ù–∞–∑–∞–¥",
            callback_data="back_to_menu"
        ),
    ])

    kb = InlineKeyboardMarkup(inline_keyboard=inline_rows)
    return kb


def product_detail_kb(nm_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìà –ì—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω",
                    callback_data=f"show_graph:{nm_id}"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üîî –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
                    callback_data=f"notify_settings:{nm_id}"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å",
                    callback_data=f"rename:{nm_id}"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üîó –û—Ç–∫—Ä—ã—Ç—å –Ω–∞ WB",
                    url=f"https://www.wildberries.ru/catalog/{nm_id}/detail.aspx"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üóë –£–¥–∞–ª–∏—Ç—å",
                    callback_data=f"rm:{nm_id}"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üìã –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É",
                    callback_data="list_products"
                ),
            ],
        ]
    )
    return kb


def settings_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üí≥ –°–∫–∏–¥–∫–∞ –∫–æ—à–µ–ª—å–∫–∞",
                    callback_data="set_discount"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üìç –ú–æ–π –ü–í–ó",
                    callback_data="show_pvz"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üí∞ –ú–æ–π —Ç–∞—Ä–∏—Ñ",
                    callback_data="my_plan"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="¬´ –ù–∞–∑–∞–¥",
                    callback_data="back_to_menu"
                ),
            ],
        ]
    )
    return kb


def notify_mode_kb(nm_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìä –ü–æ –ø—Ä–æ—Ü–µ–Ω—Ç—É —Å–Ω–∏–∂–µ–Ω–∏—è",
                    callback_data=f"notify_percent:{nm_id}"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üí∞ –ü–æ —Ü–µ–ª–µ–≤–æ–π —Ü–µ–Ω–µ",
                    callback_data=f"notify_threshold:{nm_id}"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üîï –û—Ç–∫–ª—é—á–∏—Ç—å (–≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)",
                    callback_data=f"notify_all:{nm_id}"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="¬´ –ù–∞–∑–∞–¥",
                    callback_data=f"product_detail:{nm_id}"
                ),
            ],
        ]
    )
    return kb


def confirm_remove_kb(nm_id: int) -> InlineKeyboardMarkup:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å",
                    callback_data=f"confirm_remove:{nm_id}"
                ),
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–º–µ–Ω–∞",
                    callback_data="list_products"
                ),
            ]
        ]
    )
    return kb


def reset_pvz_kb() -> InlineKeyboardMarkup:
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –ü–í–ó",
                    callback_data="set_pvz"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥",
                    callback_data="settings"
                ),
            ],
        ]
    )
    return kb


def sizes_inline_kb(nm: int, sizes: list[dict]) -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ —Ç–æ–≤–∞—Ä–∞."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(
                text=s.get("name"),
                callback_data=f"select_size:{nm}:{s.get('name')}"
            )]
            for s in sizes
        ]
    )
    return kb


def back_to_settings_kb() -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="¬´ –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º",
                    callback_data="settings"
                ),
            ],
        ]
    )
    return kb


def back_to_product_kb(nm_id: int) -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä–æ–≤."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="¬´ –ù–∞–∑–∞–¥ –≤ –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–∞",
                    callback_data=f"back_to_product:{nm_id}"
                ),
            ],
        ]
    )
    return kb


def upgrade_plan_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚¨ÜÔ∏è –£–ª—É—á—à–∏—Ç—å —Ç–∞—Ä–∏—Ñ",
                    callback_data="upgrade_plan"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="¬´ –ù–∞–∑–∞–¥",
                    callback_data="back_to_menu"
                ),
            ],
        ]
    )
    return kb


def export_format_kb() -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìó Excel (.xlsx)",
                    callback_data="export_excel"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="üìÑ CSV (.csv)",
                    callback_data="export_csv"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="¬´ –ù–∞–∑–∞–¥",
                    callback_data="back_to_menu"
                ),
            ],
        ]
    )
    return kb


def plan_detail_kb(plan_key: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –í—ã–±—Ä–∞—Ç—å —ç—Ç–æ—Ç —Ç–∞—Ä–∏—Ñ",
                    callback_data=f"confirm_{plan_key}"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="¬´ –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É",
                    callback_data="back_to_plan_choice"
                ),
            ],
        ]
    )
    return kb


def onboarding_discount_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫–∏–¥–∫–∏ –ø—Ä–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üí≥ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∫–∏–¥–∫—É",
                    callback_data="onboarding_set_discount"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
                    callback_data="onboarding_skip_discount"
                ),
            ],
        ]
    )
    return kb


def onboarding_pvz_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ü–í–ó –ø—Ä–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìç –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ü–í–ó",
                    callback_data="onboarding_set_pvz"
                ),
            ],
            [
                InlineKeyboardButton(
                    text="‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å (–ú–æ—Å–∫–≤–∞)",
                    callback_data="onboarding_skip_pvz"
                ),
            ],
        ]
    )
    return kb


def back_to_menu_kb() -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(
                text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                callback_data="back_to_menu"
            )]
        ]
    )
    return kb


def remove_products_kb(products: List[Dict]) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ.

    Args:
        products: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –∫–ª—é—á–∞–º–∏ 'nm_id' –∏ 'display_name'

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    """
    buttons = []

    for product in products:
        display_name = product['display_name']
        # –û–±—Ä–µ–∑–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if len(display_name) > 30:
            display_name = display_name[:27] + "..."

        buttons.append([
            InlineKeyboardButton(
                text=f"‚ùå {display_name}",
                callback_data=f"rm:{product['nm_id']}"
            )
        ])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    buttons.append([
        InlineKeyboardButton(
            text="¬´ –ù–∞–∑–∞–¥",
            callback_data="back_to_menu"
        )
    ])

    kb = InlineKeyboardMarkup(inline_keyboard=buttons)
    return kb


def products_list_kb(
    products: List[Dict],
    has_filters: bool = False,
    show_export: bool = False,
    show_upgrade: bool = False,
    slots_info: str = ""
) -> InlineKeyboardMarkup:
    """
    –£–ª—É—á—à–µ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤.
    
    Args:
        products: –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ —Å nm_id –∏ display_name
        has_filters: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∫–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        show_export: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∫–Ω–æ–ø–∫—É —ç–∫—Å–ø–æ—Ä—Ç–∞ (–¥–ª—è Pro)
        show_upgrade: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∫–Ω–æ–ø–∫—É –∞–ø–≥—Ä–µ–π–¥–∞ (–¥–ª—è Free)
        slots_info: –¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–ª–æ—Ç–∞—Ö
    
    Returns:
        InlineKeyboardMarkup
    """
    buttons = []
    
    # –ö–Ω–æ–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞)
    for product in products[:10]:
        display_name = product['display_name']
        if len(display_name) > 35:
            display_name = display_name[:32] + "..."
        
        buttons.append([
            InlineKeyboardButton(
                text=f"üìä {display_name}",
                callback_data=f"product_detail:{product['nm_id']}"
            )
        ])
    
    # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –±–æ–ª—å—à–µ 10, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ"
    if len(products) > 10:
        buttons.append([
            InlineKeyboardButton(
                text=f"üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ ({len(products)} —Ç–æ–≤–∞—Ä–æ–≤)",
                callback_data="show_all_products"
            )
        ])
    
    # –§–∏–ª—å—Ç—Ä—ã (–¥–ª—è –ø–ª–∞—Ç–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤)
    if has_filters:
        buttons.append([
            InlineKeyboardButton(
                text="üî• –õ—É—á—à–∏–µ —Å–∫–∏–¥–∫–∏",
                callback_data="filter_best_deals"
            ),
            InlineKeyboardButton(
                text="üìâ –ü–∞–¥–∞—é—â–∏–µ —Ü–µ–Ω—ã",
                callback_data="filter_price_drops"
            )
        ])
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    buttons.append([
        InlineKeyboardButton(
            text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä",
            callback_data="add_product"
        ),
        InlineKeyboardButton(
            text="üóë –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä",
            callback_data="remove_product"
        )
    ])
    
    # –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è Pro
    if show_export:
        buttons.append([
            InlineKeyboardButton(
                text="üìã –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel/CSV",
                callback_data="export_menu"
            )
        ])
    
    # –ê–ø–≥—Ä–µ–π–¥ –¥–ª—è Free
    if show_upgrade:
        buttons.append([
            InlineKeyboardButton(
                text="üöÄ –£–ª—É—á—à–∏—Ç—å —Ç–∞—Ä–∏—Ñ (–¥–æ 50 —Ç–æ–≤–∞—Ä–æ–≤)",
                callback_data="upsell_from_products_list"
            )
        ])
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    buttons.append([
        InlineKeyboardButton(
            text="¬´ –ù–∞–∑–∞–¥",
            callback_data="back_to_menu"
        )
    ])
    
    kb = InlineKeyboardMarkup(inline_keyboard=buttons)
    return kb


def product_navigation_kb(
    nm_id: int,
    current_index: int,
    total_products: int,
    prev_nm_id: int = None,
    next_nm_id: int = None
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ç–æ–≤–∞—Ä–∞–º –≤ –∫–∞—Ä—Ç–æ—á–∫–µ.
    
    Args:
        nm_id: –¢–µ–∫—É—â–∏–π –∞—Ä—Ç–∏–∫—É–ª
        current_index: –¢–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å —Ç–æ–≤–∞—Ä–∞ (1-based)
        total_products: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤
        prev_nm_id: –ê—Ä—Ç–∏–∫—É–ª –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        next_nm_id: –ê—Ä—Ç–∏–∫—É–ª —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    
    Returns:
        InlineKeyboardMarkup —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
    """
    buttons = []
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –±–æ–ª—å—à–µ 1)
    if total_products > 1:
        nav_row = []
        
        if prev_nm_id:
            nav_row.append(
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π",
                    callback_data=f"nav_product:{prev_nm_id}:{current_index-1}"
                )
            )
        
        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–∑–∏—Ü–∏–∏
        nav_row.append(
            InlineKeyboardButton(
                text=f"‚Ä¢ {current_index}/{total_products} ‚Ä¢",
                callback_data="noop"
            )
        )
        
        if next_nm_id:
            nav_row.append(
                InlineKeyboardButton(
                    text="–°–ª–µ–¥—É—é—â–∏–π ‚û°Ô∏è",
                    callback_data=f"nav_product:{next_nm_id}:{current_index+1}"
                )
            )
        
        buttons.append(nav_row)
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    buttons.extend([
        [
            InlineKeyboardButton(
                text="üìà –ì—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω",
                callback_data=f"show_graph:{nm_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîî –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
                callback_data=f"notify_settings:{nm_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å",
                callback_data=f"rename:{nm_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîó –û—Ç–∫—Ä—ã—Ç—å –Ω–∞ WB",
                url=f"https://www.wildberries.ru/catalog/{nm_id}/detail.aspx"
            )
        ],
        [
            InlineKeyboardButton(
                text="üóë –£–¥–∞–ª–∏—Ç—å",
                callback_data=f"rm:{nm_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìã –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É",
                callback_data="list_products"
            )
        ]
    ])
    
    kb = InlineKeyboardMarkup(inline_keyboard=buttons)
    return kb


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ "noop" –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
async def handle_noop(query):
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫."""
    await query.answer()


def admin_menu_kb() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats"),
            InlineKeyboardButton(text="üè• –ó–¥–æ—Ä–æ–≤—å–µ", callback_data="admin_health")
        ],
        [
            InlineKeyboardButton(text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data="admin_users"),
            InlineKeyboardButton(text="üì¶ –¢–æ–≤–∞—Ä—ã", callback_data="admin_products")
        ],
        [
            InlineKeyboardButton(text="‚ö†Ô∏è –û—à–∏–±–∫–∏ API", callback_data="admin_errors"),
            InlineKeyboardButton(text="üîß –°–∏—Å—Ç–µ–º–∞", callback_data="admin_system")
        ],
        [
            InlineKeyboardButton(text="üí≥ –ü–ª–∞—Ç–µ–∂–∏", callback_data="admin_payments"),
            InlineKeyboardButton(text="üì® –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")
        ],
        [
            InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="admin_menu")
        ]
    ])


def back_to_admin_menu_kb() -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="¬´ –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="admin_menu")]
    ])


def user_management_kb(user_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üìã –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ",
                callback_data=f"admin_change_plan:{user_id}"
            ),
            InlineKeyboardButton(
                text="üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å",
                callback_data=f"admin_ban_user:{user_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìä –î–µ—Ç–∞–ª–∏",
                callback_data=f"admin_user_details:{user_id}"
            ),
            InlineKeyboardButton(
                text="üóë –£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
                callback_data=f"admin_delete_user:{user_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="¬´ –ù–∞–∑–∞–¥",
                callback_data="admin_users"
            )
        ]
    ])


def plan_selection_kb(user_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üéÅ Free (5)",
                callback_data=f"admin_set_plan:{user_id}:plan_free:5"
            )
        ],
        [
            InlineKeyboardButton(
                text="üíº Basic (50)",
                callback_data=f"admin_set_plan:{user_id}:plan_basic:50"
            )
        ],
        [
            InlineKeyboardButton(
                text="üöÄ Pro (250)",
                callback_data=f"admin_set_plan:{user_id}:plan_pro:250"
            )
        ],
        [
            InlineKeyboardButton(
                text="¬´ –û—Ç–º–µ–Ω–∞",
                callback_data=f"admin_user_manage:{user_id}"
            )
        ]
    ])


def broadcast_confirm_kb(message_text: str) -> InlineKeyboardMarkup:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º",
                callback_data="admin_broadcast_confirm"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data="admin_menu"
            )
        ]
    ])

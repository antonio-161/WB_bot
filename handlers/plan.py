from aiogram import Router, F
from aiogram.types import CallbackQuery
from services.db import DB
from keyboards.kb import main_inline_kb

router = Router()

PLANS = {
    "plan_free": {"name": "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π", "max_links": 5},
    "plan_basic": {"name": "–ë–∞–∑–æ–≤—ã–π", "max_links": 50},
    "plan_pro": {"name": "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π", "max_links": 250},
}


@router.callback_query(F.data.startswith("plan_"))
async def choose_plan_callback(query: CallbackQuery, db: DB):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞ —á–µ—Ä–µ–∑ InlineKeyboard."""
    plan_key = query.data
    plan = PLANS.get(plan_key)

    if not plan:
        await query.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ.")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∞—Ä–∏—Ñ –≤ –ë–î
    await db.set_plan(
        query.from_user.id, plan_key, plan["name"], plan["max_links"]
    )

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –∏ –Ω–æ–≤—ã–º –º–µ–Ω—é
    await query.message.edit_text(
        text=(
            f"‚úÖ –¢–∞—Ä–∏—Ñ <b>{plan['name']}</b> –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n"
            f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–æ <b>{plan['max_links']}</b> —Ç–æ–≤–∞—Ä–æ–≤.\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üëá"
        ),
        parse_mode="HTML",
        reply_markup=main_inline_kb()  # Inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π
    )
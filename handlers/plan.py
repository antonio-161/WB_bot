from aiogram import Router, F
from aiogram.types import CallbackQuery
from services.db import DB
from keyboards.kb import main_inline_kb

router = Router()

PLANS = {
    "plan_free": {"name": "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π", "max_links": 5},
    "plan_basic": {"name": "–ë–∞–∑–æ–≤—ã–π", "max_links": 50},
    "plan_pro": {"name": "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π", "max_links": 250},
}


@router.callback_query(F.data.startswith("plan_"))
async def choose_plan_callback(query: CallbackQuery, db: DB):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞ —á–µ—Ä–µ–∑ InlineKeyboard."""
    plan_key = query.data
    plan = PLANS.get(plan_key)

    if not plan:
        await query.answer("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ", show_alert=True)
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∞—Ä–∏—Ñ –≤ –ë–î (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: 4 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞)
    await db.set_plan(
        user_id=query.from_user.id,
        plan_key=plan_key,
        plan_name=plan["name"],
        max_links=plan["max_links"]
    )

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞
    plan_description = {
        "plan_free": "üéÅ –û—Ç–ª–∏—á–Ω—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å —Å–µ—Ä–≤–∏—Å–æ–º!",
        "plan_basic": "üíº –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π.",
        "plan_pro": "üöÄ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤!"
    }

    description = plan_description.get(plan_key, "")

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
    await query.message.edit_text(
        text=(
            f"‚úÖ <b>–¢–∞—Ä–∏—Ñ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</b>\n\n"
            f"üìã –í—ã–±—Ä–∞–Ω: <b>{plan['name']}</b>\n"
            f"üìä –õ–∏–º–∏—Ç —Ç–æ–≤–∞—Ä–æ–≤: <b>{plan['max_links']}</b>\n\n"
            f"{description}\n\n"
            "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è üëá"
        ),
        parse_mode="HTML",
        reply_markup=main_inline_kb()
    )

    await query.answer(
        f"‚úÖ –¢–∞—Ä–∏—Ñ {plan['name']} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!", show_alert=False
    )
